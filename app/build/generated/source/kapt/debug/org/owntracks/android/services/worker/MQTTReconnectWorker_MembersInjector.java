// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.owntracks.android.services.MessageProcessor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MQTTReconnectWorker_MembersInjector implements MembersInjector<MQTTReconnectWorker> {
  private final Provider<MessageProcessor> messageProcessorProvider;

  public MQTTReconnectWorker_MembersInjector(Provider<MessageProcessor> messageProcessorProvider) {
    this.messageProcessorProvider = messageProcessorProvider;
  }

  public static MembersInjector<MQTTReconnectWorker> create(
      Provider<MessageProcessor> messageProcessorProvider) {
    return new MQTTReconnectWorker_MembersInjector(messageProcessorProvider);
  }

  @Override
  public void injectMembers(MQTTReconnectWorker instance) {
    injectMessageProcessor(instance, messageProcessorProvider.get());
  }

  @InjectedFieldSignature("org.owntracks.android.services.worker.MQTTReconnectWorker.messageProcessor")
  public static void injectMessageProcessor(MQTTReconnectWorker instance,
      MessageProcessor messageProcessor) {
    instance.messageProcessor = messageProcessor;
  }
}
