// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.services.worker;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.owntracks.android.services.LocationProcessor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SendLocationPingWorker_MembersInjector implements MembersInjector<SendLocationPingWorker> {
  private final Provider<LocationProcessor> locationProcessorProvider;

  public SendLocationPingWorker_MembersInjector(
      Provider<LocationProcessor> locationProcessorProvider) {
    this.locationProcessorProvider = locationProcessorProvider;
  }

  public static MembersInjector<SendLocationPingWorker> create(
      Provider<LocationProcessor> locationProcessorProvider) {
    return new SendLocationPingWorker_MembersInjector(locationProcessorProvider);
  }

  @Override
  public void injectMembers(SendLocationPingWorker instance) {
    injectLocationProcessor(instance, locationProcessorProvider.get());
  }

  @InjectedFieldSignature("org.owntracks.android.services.worker.SendLocationPingWorker.locationProcessor")
  public static void injectLocationProcessor(SendLocationPingWorker instance,
      LocationProcessor locationProcessor) {
    instance.locationProcessor = locationProcessor;
  }
}
