// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.injection.modules.android.ActivityModules;

import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.FragmentManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivityModule_ProvideFragmentManagerFactory implements Factory<FragmentManager> {
  private final Provider<AppCompatActivity> contextProvider;

  public BaseActivityModule_ProvideFragmentManagerFactory(
      Provider<AppCompatActivity> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public FragmentManager get() {
    return provideFragmentManager(contextProvider.get());
  }

  public static BaseActivityModule_ProvideFragmentManagerFactory create(
      Provider<AppCompatActivity> contextProvider) {
    return new BaseActivityModule_ProvideFragmentManagerFactory(contextProvider);
  }

  public static FragmentManager provideFragmentManager(AppCompatActivity context) {
    return Preconditions.checkNotNullFromProvides(BaseActivityModule.provideFragmentManager(context));
  }
}
