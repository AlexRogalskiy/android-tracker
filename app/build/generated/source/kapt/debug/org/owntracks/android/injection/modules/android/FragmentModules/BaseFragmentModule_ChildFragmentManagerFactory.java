// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.injection.modules.android.FragmentModules;

import android.app.Fragment;
import android.app.FragmentManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragmentModule_ChildFragmentManagerFactory implements Factory<FragmentManager> {
  private final Provider<Fragment> fragmentProvider;

  public BaseFragmentModule_ChildFragmentManagerFactory(Provider<Fragment> fragmentProvider) {
    this.fragmentProvider = fragmentProvider;
  }

  @Override
  public FragmentManager get() {
    return childFragmentManager(fragmentProvider.get());
  }

  public static BaseFragmentModule_ChildFragmentManagerFactory create(
      Provider<Fragment> fragmentProvider) {
    return new BaseFragmentModule_ChildFragmentManagerFactory(fragmentProvider);
  }

  public static FragmentManager childFragmentManager(Fragment fragment) {
    return Preconditions.checkNotNullFromProvides(BaseFragmentModule.childFragmentManager(fragment));
  }
}
