// Generated by Dagger (https://dagger.dev).
package org.owntracks.android;

import dagger.MembersInjector;
import dagger.android.DaggerApplication_MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.greenrobot.eventbus.EventBus;
import org.owntracks.android.services.MessageProcessor;
import org.owntracks.android.support.Preferences;
import org.owntracks.android.support.RunThingsOnOtherThreads;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class App_MembersInjector implements MembersInjector<App> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<Preferences> preferencesProvider;

  private final Provider<RunThingsOnOtherThreads> runThingsOnOtherThreadsProvider;

  private final Provider<MessageProcessor> messageProcessorProvider;

  private final Provider<EventBus> eventBusProvider;

  public App_MembersInjector(Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<Preferences> preferencesProvider,
      Provider<RunThingsOnOtherThreads> runThingsOnOtherThreadsProvider,
      Provider<MessageProcessor> messageProcessorProvider, Provider<EventBus> eventBusProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.preferencesProvider = preferencesProvider;
    this.runThingsOnOtherThreadsProvider = runThingsOnOtherThreadsProvider;
    this.messageProcessorProvider = messageProcessorProvider;
    this.eventBusProvider = eventBusProvider;
  }

  public static MembersInjector<App> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<Preferences> preferencesProvider,
      Provider<RunThingsOnOtherThreads> runThingsOnOtherThreadsProvider,
      Provider<MessageProcessor> messageProcessorProvider, Provider<EventBus> eventBusProvider) {
    return new App_MembersInjector(androidInjectorProvider, preferencesProvider, runThingsOnOtherThreadsProvider, messageProcessorProvider, eventBusProvider);
  }

  @Override
  public void injectMembers(App instance) {
    DaggerApplication_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectPreferences(instance, preferencesProvider.get());
    injectRunThingsOnOtherThreads(instance, runThingsOnOtherThreadsProvider.get());
    injectMessageProcessor(instance, messageProcessorProvider.get());
    injectEventBus(instance, eventBusProvider.get());
  }

  @InjectedFieldSignature("org.owntracks.android.App.preferences")
  public static void injectPreferences(App instance, Preferences preferences) {
    instance.preferences = preferences;
  }

  @InjectedFieldSignature("org.owntracks.android.App.runThingsOnOtherThreads")
  public static void injectRunThingsOnOtherThreads(App instance,
      RunThingsOnOtherThreads runThingsOnOtherThreads) {
    instance.runThingsOnOtherThreads = runThingsOnOtherThreads;
  }

  @InjectedFieldSignature("org.owntracks.android.App.messageProcessor")
  public static void injectMessageProcessor(App instance, MessageProcessor messageProcessor) {
    instance.messageProcessor = messageProcessor;
  }

  @InjectedFieldSignature("org.owntracks.android.App.eventBus")
  public static void injectEventBus(App instance, EventBus eventBus) {
    instance.eventBus = eventBus;
  }
}
