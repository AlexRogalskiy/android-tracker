// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.injection.modules.android.ActivityModules;

import androidx.appcompat.app.AppCompatActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.owntracks.android.support.Preferences;
import org.owntracks.android.support.RequirementsChecker;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivityModule_ProvideRequirementsCheckerFactory implements Factory<RequirementsChecker> {
  private final Provider<AppCompatActivity> contextProvider;

  private final Provider<Preferences> preferencesProvider;

  public BaseActivityModule_ProvideRequirementsCheckerFactory(
      Provider<AppCompatActivity> contextProvider, Provider<Preferences> preferencesProvider) {
    this.contextProvider = contextProvider;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public RequirementsChecker get() {
    return provideRequirementsChecker(contextProvider.get(), preferencesProvider.get());
  }

  public static BaseActivityModule_ProvideRequirementsCheckerFactory create(
      Provider<AppCompatActivity> contextProvider, Provider<Preferences> preferencesProvider) {
    return new BaseActivityModule_ProvideRequirementsCheckerFactory(contextProvider, preferencesProvider);
  }

  public static RequirementsChecker provideRequirementsChecker(AppCompatActivity context,
      Preferences preferences) {
    return Preconditions.checkNotNullFromProvides(BaseActivityModule.provideRequirementsChecker(context, preferences));
  }
}
