// Generated by Dagger (https://dagger.dev).
package org.owntracks.android.injection.modules.android.ActivityModules;

import androidx.appcompat.app.AppCompatActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivityModule_ActivityContextFactory implements Factory<AppCompatActivity> {
  private final Provider<AppCompatActivity> activityProvider;

  public BaseActivityModule_ActivityContextFactory(Provider<AppCompatActivity> activityProvider) {
    this.activityProvider = activityProvider;
  }

  @Override
  public AppCompatActivity get() {
    return activityContext(activityProvider.get());
  }

  public static BaseActivityModule_ActivityContextFactory create(
      Provider<AppCompatActivity> activityProvider) {
    return new BaseActivityModule_ActivityContextFactory(activityProvider);
  }

  public static AppCompatActivity activityContext(AppCompatActivity activity) {
    return Preconditions.checkNotNullFromProvides(BaseActivityModule.activityContext(activity));
  }
}
